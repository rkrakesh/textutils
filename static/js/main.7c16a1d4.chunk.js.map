{"version":3,"sources":["logo.svg","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","href","type","id","TextForm","props","useState","text","setText","heading","rows","value","onChange","event","target","onClick","newText","toUpperCase","toLowerCase","split","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+KAAe,I,YCGA,SAASA,IACpB,OACI,sBAAKC,UAAU,8CAAf,UACI,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,uBACA,wBAAQD,UAAU,iBAAiBE,KAAK,SAAS,cAAY,WAAW,cAAY,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAAtL,SACI,sBAAMF,UAAU,0BAGpB,qBAAKA,UAAU,2BAA2BG,GAAG,yBAA7C,SACI,oBAAIH,UAAU,qBAAd,SACA,oBAAIA,UAAU,kBAAd,SACI,oBAAGA,UAAU,WAAWC,KAAK,IAA7B,kBAAsC,sBAAMD,UAAU,UAAhB,mC,WCR3C,SAASI,EAASC,GAE7B,IAeA,EAAwBC,mBAAS,mBAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,OACI,qCACA,sBAAKR,UAAU,YAAf,UACI,6BAAKK,EAAMI,UACX,qBAAKT,UAAU,OAAf,SACI,0BAAUA,UAAU,eAAeG,GAAG,QAAQO,KAAK,IAAIC,MAAOJ,EAAMK,SAZzD,SAACC,GACpBL,EAAQK,EAAMC,OAAOH,YAajB,wBAAQX,UAAU,uBAAuBe,QAxBzB,WACpB,IAAIC,EAAUT,EAAKU,cACnBT,EAAQQ,IAsBJ,kCACA,wBAAQhB,UAAU,uBAAuBe,QApBzB,WACpB,IAAIC,EAAUT,EAAKW,cACnBV,EAAQQ,IAkBJ,qCAEJ,sBAAKhB,UAAU,YAAf,UACI,mDACCO,EAAKY,MAAM,KAAKC,OAFrB,cAEwCb,EAAKa,OAF7C,oBCFOC,MArBf,WACE,OACE,qCAEE,cAACtB,EAAD,IACA,qBAAKC,UAAU,iBAAf,SASM,cAACI,EAAD,CAAUK,QAAQ,gCCdfa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.7c16a1d4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <a className=\"navbar-brand\" href=\"#\">TextUtils</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                <li className=\"nav-item active\">\r\n                    <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n                </li>\r\n                {/* <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" href=\"/about\">About</a>\r\n                </li> */}\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import React , { useState } from 'react'\r\n\r\n// Notes\r\n// Hooks? *Hooks are a new addition in React 16.8.\r\n// Hooks let you use state and other React features without writing a class.\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleUpperCase = ()=> {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n\r\n    const handleLowerCase = ()=> {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n\r\n    const handleOnchange = (event)=> {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    // Declare a new state variable, which we'll call \"count\"\r\n    const [text, setText] = useState('Enter text here');\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" id=\"myBox\" rows=\"8\" value={text} onChange={handleOnchange}></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleUpperCase}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleLowerCase}>Convert to Lowercase</button>\r\n        </div>\r\n        <div className=\"container\">\r\n            <h1>Your text summary</h1>\r\n            {text.split(' ').length} words and {text.length} characters\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm'\nimport About from './components/About';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <>\n{/*  <Router> */}\n      <Navbar />\n      <div className=\"container my-3\">\n            {/* <Switch>\n              <Route path=\"/about\">\n                <About />\n              </Route>\n              <Route path=\"/\">\n                <TextForm heading=\"Enter text to analyze\"/>\n              </Route>\n            </Switch> */}\n            <TextForm heading=\"Enter text to analyze\"/>\n      </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}